{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nLM_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nLM_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nLM = MotorGroup(LM_motor_a, LM_motor_b)\nRM_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nRM_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\nRM = MotorGroup(RM_motor_a, RM_motor_b)\nintake = Motor(Ports.PORT5, GearSetting.RATIO_18_1, False)\nLift = Motor(Ports.PORT6, GearSetting.RATIO_36_1, False)\nlift2 = Motor(Ports.PORT7, GearSetting.RATIO_36_1, True)\nWL = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nWR = Motor(Ports.PORT16, GearSetting.RATIO_18_1, False)\nflywheel = Motor(Ports.PORT10, GearSetting.RATIO_6_1, True)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nLM.set_timeout(.5, SECONDS) \nRM.set_timeout(.5,SECONDS) \nLM.spin_for(REVERSE, 0.611, TURNS, wait=False) \nRM.spin_for(REVERSE, -0.141, TURNS, wait=True) \nLift.spin_for(FORWARD, 1.1, TURNS, wait=False) \nlift2.spin_for(FORWARD, 1.1, TURNS, wait=True)\n#flywheel.set_velocity(50, PERCENT)\n#flywheel.spin_for(FORWARD, 15, SECONDS)\n#jordansucksatcoding\nLM.set_timeout(.5, SECONDS) \nRM.set_timeout(.5,SECONDS)\nLM.set_velocity(100, PERCENT)\nRM.set_velocity(100, PERCENT) \nLift.spin_for(REVERSE, 1.5,TURNS, wait=False)\nlift2.spin_for(REVERSE, 1.5, TURNS, wait=False)\nLM.spin_for(FORWARD, .54, TURNS, wait=False) \nRM.spin_for(REVERSE, .54, TURNS, wait=True)\nLM.set_velocity(75, PERCENT)\nRM.set_velocity(75, PERCENT)\nLM.set_timeout(100, SECONDS) \nRM.set_timeout(100,SECONDS)\nLM.spin_for(FORWARD, 6.25, TURNS, wait=False) \nRM.spin_for(FORWARD, 6.25, TURNS, wait=True)\nRM.set_velocity(80, PERCENT)\nLM.set_velocity(80, PERCENT)\nLM.spin_for(REVERSE, 0.55, TURNS, wait=False) \nRM.spin_for(FORWARD, 0.55, TURNS, wait=True)\nRM.set_velocity(50, PERCENT)\nLM.set_velocity(50, PERCENT)\nWR.spin_for(FORWARD, 90, DEGREES, wait=False)\nWL.spin_for(FORWARD, 90, DEGREES, wait=False)\nLM.spin_for(FORWARD, 2.5, TURNS, wait=False)\nRM.spin_for(FORWARD, 2.5, TURNS, wait=True)\nLM.spin_for(REVERSE, 1, TURNS, wait=False) \nRM.spin_for(REVERSE, 1, TURNS, wait=True)\nWR.spin_for(REVERSE, 90, DEGREES, wait=False)\nWL.spin_for(REVERSE, 90, DEGREES, wait=False)\nRM.set_velocity(80, PERCENT)\nLM.set_velocity(80, PERCENT)\nLM.spin_for(REVERSE, 0.5, TURNS, wait=False) \nRM.spin_for(FORWARD, 0.5, TURNS, wait=True)\nLM.spin_for(FORWARD, 2.5, TURNS, wait=False)\nRM.spin_for(FORWARD, 2.5, TURNS, wait=True)\nLM.spin_for(FORWARD, 1, TURNS, wait=False) \nRM.spin_for(REVERSE, 1, TURNS, wait=True)\n\n","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}