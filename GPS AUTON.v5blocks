{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable><variable id=\"UZ+ubeO]x@-kiq+?`Ql:\">new_num</variable><variable id=\")p#w)`1T`l8@TWwr-|6/\">done</variable><variable type=\"broadcast_msg\" id=\"ROX`;B~FnZ*w.t]w1@z8\">message1</variable><variable type=\"broadcast_msg\" id=\"YMXuJ`N/=o1/_k_Cg(.M\">im_done</variable><variable type=\"broadcast_msg\" id=\"yL_y#UV_}GGxIUXOaP*h\">wait_GPS</variable></variables><block type=\"procedures_definition\" id=\"Q.;:tM},111ME=kuxD5T\" x=\"1130\" y=\"90\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"4^@g3,?k@Z$9k9{KSj!e\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Drive till %n inches away from wall\" proceduredefid=\"4^@g3,?k@Z$9k9{KSj!e\" argumentids=\"[&quot;8VR(,+}V1z-4XDz|SS6i&quot;]\" argumentnames=\"[&quot;number&quot;]\" argumentdefaults=\"[&quot;todo&quot;,&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"8VR(,+}V1z-4XDz|SS6i\"><shadow type=\"argument_reporter_number\" id=\"kfi(?I*PYI-CwE~j^:z,\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Drive_till_number_inches_away_from_wall\" argumentid=\"8VR(,+}V1z-4XDz|SS6i\" proceduredefid=\"4^@g3,?k@Z$9k9{KSj!e\"></mutation><field name=\"VALUE\">number</field></shadow></value></shadow></statement><next><block type=\"v5_other_comment\" id=\"({*))K%FT3%6fgHPAoF^\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"?KPjw11qNaE{{x+YwE-C\"><field name=\"comment\">This function was written in preperation of a possible nationals appearance. We plan to keep this code for possible future competitions or expansion of our robot</field></shadow></value><next><block type=\"v5_other_comment\" id=\"%,^SX(az#hg1+b^]DM^h\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"|f74R8}md?0KOhMro}EW\"><field name=\"comment\">sets the offset of the distance sensor based off its placement</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"^45t}#%c0`?.VtbzbV}%\"><field name=\"VARIABLE\" id=\"UZ+ubeO]x@-kiq+?`Ql:\">new_num</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"SEDY9o~Zl+-;OF83wf_Q\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_add\" id=\"]/_MLle}76Jm8T(e-)xx\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"}R`qS#{9k*{hdm(;{v*u\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"yto4Q]@i[CL1Y))-]@?:\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Drive_till_number_inches_away_from_wall\" argumentid=\"8VR(,+}V1z-4XDz|SS6i\" proceduredefid=\"4^@g3,?k@Z$9k9{KSj!e\"></mutation><field name=\"VALUE\">number</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"m)w|@@b*YI[$s{Hm9-ea\"><field name=\"NUM\">6</field></shadow></value></block></value><next><block type=\"v5_control_forever\" id=\"eM+WBMrFNZuX@K/uvLGN\"><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\".s3C)UmO0Q=|DxYs~@NM\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"I)-rp^R9~^m.%@s+i!Nr\"><field name=\"comment\">This chain of if statements checks to see the distance of the robot from the wall and has the robot drive forward or backwards</field></shadow></value><next><block type=\"v5_other_comment\" id=\"U=[O.|r!qHFcJECb|W?0\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"#EMt:qY2/^|H]sj$YO`(\"><field name=\"comment\">based off how far or close the robot is to the wall or object it is in front of. It is givent about a 2 inch area of give so that the robot isnt constantly adjusting </field></shadow></value><next><block type=\"v5_control_if_elseif_else\" id=\"UoqY6*aR-OX`d`Y^_|O:\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" branches=\"3\"></mutation><value name=\"CONDITION1\"><block type=\"v5_operator_greater_than\" id=\"(|t.pRG(y)h,C133Hm~r\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"a~wf@LxBMQG#17/jcY6[\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_distance_object_distance\" id=\"|K95Ur(:H1Lw`!NnoUQO\"><field name=\"DISTANCE\">DF</field><field name=\"UNITS\">in</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"(%PRLe{NI(@q:pJaGG2v\"><field name=\"NUM\">12</field></shadow><block type=\"v5_operator_add\" id=\"*/1d3woxlz/-/0MqJA[4\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"Vz(FM,3253Am?XD1:]V4\"><field name=\"NUM\">0</field></shadow><block type=\"v5_variables_variable\" id=\"Izs=/c=*b=|JOK`(*oMl\"><field name=\"VARIABLE\" id=\"UZ+ubeO]x@-kiq+?`Ql:\">new_num</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"M}D^%9CBbyuh~e~u)p)`\"><field name=\"NUM\">2</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK1\"><block type=\"v5_other_comment\" id=\"kvnD{W$R^E=@{7lH-PaG\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"XOahGxGi)i:F6A{59%@r\"><field name=\"comment\">If distance is more than the specified distance it drives forward </field></shadow></value><next><block type=\"v5_drivetrain_drive\" id=\"EyC)3f#1L1jcECz;-;t,\"><field name=\"DIRECTION\">fwd</field></block></next></block></statement><value name=\"CONDITION2\"><block type=\"v5_operator_less_than\" id=\"ei6S0X.sYk*x+I{({S^2\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"ymkBiXEj@p|a~ji_CNA)\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_distance_object_distance\" id=\"*hfMVnmm2+X~u.]b9._(\"><field name=\"DISTANCE\">DF</field><field name=\"UNITS\">in</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"*QhxGQCiC[beihr[=OwF\"><field name=\"NUM\">10</field></shadow><block type=\"v5_variables_variable\" id=\"F7=M73lC~PQF7Tc|^@DW\"><field name=\"VARIABLE\" id=\"UZ+ubeO]x@-kiq+?`Ql:\">new_num</field></block></value></block></value><statement name=\"SUBSTACK2\"><block type=\"v5_other_comment\" id=\"T$VZr9g1}s(soG^xJi^O\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"p3Ycb?xSod^,C+Nw%$_J\"><field name=\"comment\">If the distance is less than the provided distance, then it drives backwards</field></shadow></value><next><block type=\"v5_drivetrain_drive\" id=\"ERIMdAT]F%]#3LF/d$(T\"><field name=\"DIRECTION\">rev</field></block></next></block></statement><value name=\"CONDITION3\"><block type=\"v5_operator_and\" id=\"!LYN8=FatDX!]o#]Dq]-\"><value name=\"OPERAND1\"><block type=\"v5_operator_greater_than\" id=\"YC`B5/HVOAGgq]9HgZVD\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_distance_object_distance\" id=\"_mU?/J9!OT@2m9XWKX*x\"><field name=\"DISTANCE\">DF</field><field name=\"UNITS\">in</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"Vi$gOTQ*mR#.fKNUGhe*\"><field name=\"NUM\">10</field></shadow><block type=\"v5_variables_variable\" id=\"u*3MryE+g!u-1=eJ}|;f\"><field name=\"VARIABLE\" id=\"UZ+ubeO]x@-kiq+?`Ql:\">new_num</field></block></value></block></value><value name=\"OPERAND2\"><block type=\"v5_operator_less_than\" id=\"dz?sQ;/O.5nx?D%*t+_^\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_distance_object_distance\" id=\"Gz%#S%SJ+M:XRM)}BpVK\"><field name=\"DISTANCE\">DF</field><field name=\"UNITS\">in</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"qn$JREv+Sq~yQi`9dt2f\"><field name=\"NUM\">12</field></shadow><block type=\"v5_operator_add\" id=\"(?EzraWmr!R]6H?LL:zI\"><value name=\"NUM1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_variables_variable\" id=\"5^0Y}FIAZ[)^UA,nTX?:\"><field name=\"VARIABLE\" id=\"UZ+ubeO]x@-kiq+?`Ql:\">new_num</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"`c#9Wr_RX%p|Ty6C`VSA\"><field name=\"NUM\">2</field></shadow></value></block></value></block></value></block></value><statement name=\"SUBSTACK3\"><block type=\"v5_other_comment\" id=\"0Z7,Z~G$a77.cGoB+v[}\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"pSdGw9$9mdm2(tm9g}_X\"><field name=\"comment\">When driving is done, set the stop variable to 1, showing it is done and breakign the forever loop</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"g1w!o=G3Z]HbmL!(2Biq\"><next><block type=\"v5_variables_set_variable\" id=\"8U#+K46T%%kV}vcY=TbA\"><field name=\"VARIABLE\" id=\")p#w)`1T`l8@TWwr-|6/\">done</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"!MzlZ5rie-JQRHu24XJQ\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_control_break\" id=\"Je~dAme53khi=rV;hgx;\"></block></next></block></next></block></next></block></statement><statement name=\"SUBSTACK_ELSE\"><block type=\"v5_other_comment\" id=\"~8JF`]}n*3SS-[Uwia+A\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"8[ZD=0*!Alhj!p=yu?WG\"><field name=\"comment\">If no object is detected, then it drives forward until the robot detects an object and follows the above if statements</field></shadow></value><next><block type=\"v5_drivetrain_drive\" id=\"JiuN#8y#7u~,}6kV_-?c\"><field name=\"DIRECTION\">fwd</field></block></next></block></statement></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"an=+~cytBE;RzSpDtb:h\" x=\"-850\" y=\"230\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"J;sDBbPCQbcIsn278nK/\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lock On %n Degrees\" proceduredefid=\"J;sDBbPCQbcIsn278nK/\" argumentids=\"[&quot;wLO$xN`LdeE$SjRXN2D;&quot;]\" argumentnames=\"[&quot;number&quot;]\" argumentdefaults=\"[&quot;todo&quot;,&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"wLO$xN`LdeE$SjRXN2D;\"><shadow type=\"argument_reporter_number\" id=\"j^K/]$d*EiDpf:v]3wJ;\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Lock_On_number_Degrees\" argumentid=\"wLO$xN`LdeE$SjRXN2D;\" proceduredefid=\"J;sDBbPCQbcIsn278nK/\"></mutation><field name=\"VALUE\">number</field></shadow></value></shadow></statement><next><block type=\"v5_other_comment\" id=\"dM%@%r}kbr!A!Dm}V+zs\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"8V^[UDFt)2~mPz3/2,XX\"><field name=\"comment\">Function that we use to have the robot lock on to a certain degree</field></shadow></value><next><block type=\"v5_sensing_gps_calibrate\" id=\"?`vldg@wdx-!A6[u#XV}\"><field name=\"GPS\">DrivetrainGPS</field><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"3e*Pp/:LX6-vB-zj*g;u\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"@=Q/n{q:6]o$2Kmp)32*\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_control_forever\" id=\"!4W9kDjnW0M|e93$g4$l\"><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\"umaKF?|Ax))MI39Aw~xu\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"degqbYo=#`8IvF8xA|s6\"><field name=\"comment\">Sets heading forever</field></shadow></value><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"csEO^9W?}*Mow|*SLqp9\"><field name=\"anddontwait_mutator\">true</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"/.!Li:Xp0qfxTwo[.mSi\"><field name=\"NUM\">90</field></shadow><block type=\"argument_reporter_number\" id=\"asUhYHf|n#ykc.Ko9-1c\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Lock_On_number_Degrees\" argumentid=\"wLO$xN`LdeE$SjRXN2D;\" proceduredefid=\"J;sDBbPCQbcIsn278nK/\"></mutation><field name=\"VALUE\">number</field></block></value><next><block type=\"v5_other_comment\" id=\"fhJwJ@U;LmzNrgV$W{b5\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"TEqVnqB9OYd@iH!p_XEz\"><field name=\"comment\">This If Statement is a checking system to break the forever loop if the timer is done</field></shadow></value><next><block type=\"v5_control_if_then\" id=\"SIC*O|,uOrJqGegxSf/T\"><value name=\"CONDITION\"><block type=\"v5_operator_equal_to\" id=\"Ee?it?QGDTe2D@#B$-V$\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_variables_variable\" id=\"us$IpQF:19s1,3/`+u^a\"><field name=\"VARIABLE\" id=\")p#w)`1T`l8@TWwr-|6/\">done</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"rC7Dik*z9caaJs1eD2[m\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_variables_set_variable\" id=\"BwWoy`5~M4x,2t#2ncH9\"><field name=\"VARIABLE\" id=\")p#w)`1T`l8@TWwr-|6/\">done</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"w}c^;}#QS7,ZSOX=iWME\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_control_break\" id=\"4Gz2y}1*%RWxdW5ti5n[\"></block></next></block></statement></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-50\" y=\"210\"><next><block type=\"v5_other_comment\" id=\"{pS|?^[~vU/.F1C=P14G\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\":b-!Fu0p]3DB+40fQ{o5\"><field name=\"comment\">Setting a drive timeout in case robot drives into a wall so the program doesnt brick</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_timeout\" id=\"vY!LraXR~Cyrfii6[niU\"><value name=\"TIMEOUT\"><shadow type=\"math_number\" id=\"hx[/iL:-BxE5ro1eP{!g\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"v5_other_comment\" id=\"i3;vLp*Z2PzLj}~rzNf%\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"(PK.F(|23;G^XY{L/GV_\"><field name=\"comment\">the next code sets all of the required stopping velocity, and torque values to be used throughout the program</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"6pBO$wJD]eB+Cj%ind@@\"><field name=\"MOTOR\">Lift</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"2AvJrkDj/gG::#UF!hT[\"><field name=\"MOTOR\">FW</field><field name=\"MODE\">coast</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"k/c9hlD3=5%/GI9C]@9(\"><field name=\"MOTOR\">FW</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\":-2I.2inS{I/cT{}erQM\"><field name=\"NUM\">45</field></shadow></value><next><block type=\"v5_motion_set_motor_torque\" id=\"ijdG#UTuAT9ov;4/48,u\"><field name=\"MOTOR\">FW</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"Gvww?ggMl,U{3|gilft0\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"IW|0[d0PjFH!2ld+8eD*\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"ouso5F6y(R%p*F;9iRU7\"><field name=\"NUM\">70</field></shadow></value><next><block type=\"v5_other_comment\" id=\"o9+UaOwsFV~H)Qo?{C;`\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"yO:Y|1)!h4JX,:IPhV1(\"><field name=\"comment\">These two drives have our robot move forward, then backwards to push in the red preloaded tri ball</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"zOnt*oHz@;%FC0l#BiOf\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"|q}tzuW/.lT!stjDS6T:\"><field name=\"NUM\">7</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"k1JUd0?T$iG9oGmY(n[p\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"W0]Q]VS%#.QB/G3O?8C{\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"v5_other_comment\" id=\"=5aZA3D%ZBTA,5Ls[[@D\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"^{fg1W%W.r}0aWIrSBs{\"><field name=\"comment\">This spins the flywheel so that it has enough speed for when we are ready to start loading on the triballs</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"/ez%%rm,F_,+1Ih`upPW\"><field name=\"MOTOR\">FW</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_other_comment\" id=\"W}*rzoXcF,Y@987R2[mg\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"*Hv!Y92`qgxzU)K(mP?~\"><field name=\"comment\">The next two sets the wait timer and has the robot lock onto 30 degrees, lining up with the loading zone</field></shadow></value><next><block type=\"v5_events_broadcast\" id=\"T;hI{~Fh4f!ha;huTZaq\"><field name=\"BROADCAST_OPTION\" id=\"yL_y#UV_}GGxIUXOaP*h\" variabletype=\"broadcast_msg\">wait_GPS</field><next><block type=\"procedures_call\" id=\"!{5]cDKzh*6XY~Q#]hgo\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lock On %n Degrees\" proceduredefid=\"J;sDBbPCQbcIsn278nK/\" argumentids=\"[&quot;wLO$xN`LdeE$SjRXN2D;&quot;]\" warp=\"false\"></mutation><value name=\"wLO$xN`LdeE$SjRXN2D;\"><shadow type=\"math_number\" id=\"F@CKK//ul:G6VJ)J5ZQt\"><field name=\"NUM\">120</field></shadow></value><next><block type=\"v5_other_comment\" id=\".d{f$[j=[)BnYSa9j%^|\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"?hC)C#:O9F^Lk4|54S2]\"><field name=\"comment\">The next three have the robot drive backwards and and the same time, rotate the lift arms so our robot breaks the loading plane</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"D+7bmyRA1f]MFTskZ5b4\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"[d{pTh4zx~c-jfs16oSh\"><field name=\"NUM\">4</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"*tsh]0c?|y#*5G-PpeiG\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"mZK$z4zV(NYG%CBR))6|\"><field name=\"NUM\">1.5</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_timeout\" id=\"=?q`AnEe^]t:]*+8!g:9\"><value name=\"TIMEOUT\"><shadow type=\"math_number\" id=\"N}[|k5Z$_a#WPO%|HAVs\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_other_comment\" id=\"Td#NS/Wi/[@CkjnNQa,/\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"|h{9q|A3GjqBCrW4zSJ2\"><field name=\"comment\">This timer is set to give us 37 seconds of shooting over the tri balls</field></shadow></value><next><block type=\"v5_control_wait\" id=\"H6G/2^n%L$0=K(VH0$V}\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"FuaI%8[,AqjB1WO1G[@H\"><field name=\"NUM\">37</field></shadow></value><next><block type=\"v5_other_comment\" id=\"B/k{6Gbpmz)cax@lelxk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"^e?J;tp)WLjnKx`;j7;Y\"><field name=\"comment\">the next two stop the flywheel after the 37 seconds and puts the lift arms at almost 90 degrees to prepare for hanging</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"ZA$3,#n|](v=uA;{yq:+\"><field name=\"MOTOR\">FW</field><next><block type=\"v5_motion_spin_for\" id=\"_XLg!K:pLZoQ[-Z?Ppa/\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Tq6Tr,))?8_L8^OX~tHA\"><field name=\"NUM\">0.5</field></shadow></value><next><block type=\"v5_other_comment\" id=\"JhCN[n8k4ko[-5^jG#@N\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Z[,D;{MpUjuE,$sNJ~!3\"><field name=\"comment\">The next two has the robot lock onto -30 degrees</field></shadow></value><next><block type=\"v5_events_broadcast\" id=\"U}!Zt-vL~I$=#-O~^c/g\"><field name=\"BROADCAST_OPTION\" id=\"yL_y#UV_}GGxIUXOaP*h\" variabletype=\"broadcast_msg\">wait_GPS</field><next><block type=\"procedures_call\" id=\"*}Y-p34Qi2d*23C:);)~\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lock On %n Degrees\" proceduredefid=\"J;sDBbPCQbcIsn278nK/\" argumentids=\"[&quot;wLO$xN`LdeE$SjRXN2D;&quot;]\" warp=\"false\"></mutation><value name=\"wLO$xN`LdeE$SjRXN2D;\"><shadow type=\"math_number\" id=\"OmtliF$B]uR17LlT8vS7\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"v5_other_comment\" id=\"jEx~,35X}kIM;QMJz]5_\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"NuF}:6Gj^g%AmQyNt6l2\"><field name=\"comment\">The next one drives the robot to align with the hang bars</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"?jjhYVN4/RMI;.f)+=T!\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"V3(9?V]kBlhL?_p@.co_\"><field name=\"NUM\">36</field></shadow></value><next><block type=\"v5_other_comment\" id=\",mh/Th]dTk$HOs`-Jv8r\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\".LB-ljkk^f6rLmJb/~l~\"><field name=\"comment\">The next two aligns the robot to 0 degrees, facing the hang bar</field></shadow></value><next><block type=\"v5_events_broadcast\" id=\"sRdRM}@*PdL?F9+?5Tpp\"><field name=\"BROADCAST_OPTION\" id=\"yL_y#UV_}GGxIUXOaP*h\" variabletype=\"broadcast_msg\">wait_GPS</field><next><block type=\"procedures_call\" id=\"~fYN=B!%0/epArKVT~2=\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Lock On %n Degrees\" proceduredefid=\"J;sDBbPCQbcIsn278nK/\" argumentids=\"[&quot;wLO$xN`LdeE$SjRXN2D;&quot;]\" warp=\"false\"></mutation><value name=\"wLO$xN`LdeE$SjRXN2D;\"><shadow type=\"math_number\" id=\"Aayj:*6+uMys7zysRS.0\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_other_comment\" id=\"WYc*K@_89(nO^cXq^tV_\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"cjJWdJ-@Ms*dbsXV:xAZ\"><field name=\"comment\">The final two have the robot drive forward and move the lift arms to the point where the robot is hanging</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"ib?iE8h5$:I=`Y0P^E;{\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"$.FhHYND6qdd9e;U2GkD\"><field name=\"NUM\">32</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"eqHu98ZjYDEj_O!W^k%a\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Ut7UVvwlW!WJ:*8$9*nc\"><field name=\"NUM\">-1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_broadcasted\" id=\"Z6ef*HVUOM9_]jwHFh[y\" x=\"-850\" y=\"950\"><field name=\"BROADCAST_OPTION\" id=\"yL_y#UV_}GGxIUXOaP*h\" variabletype=\"broadcast_msg\">wait_GPS</field><next><block type=\"v5_other_comment\" id=\"OAxm(o^JWE2U|ag}:rd}\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\",n3$ii/ooI.*SDqKklCn\"><field name=\"comment\">Gives a buffer for the gps sensor to correctly turn to the heading we want it to</field></shadow></value><next><block type=\"v5_control_wait\" id=\"?~s=aMw1$Y[zu([#g~fP\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"*U!kisH+)s(].XIfEiRW\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"]v4@LS2v(1a0Ug]1V):e\"><field name=\"VARIABLE\" id=\")p#w)`1T`l8@TWwr-|6/\">done</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"3e@(BQv4V1Y?~~z*=JO=\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block><block type=\"v5_events_when_started\" id=\"$-{b^.y|LNeVv!]v]fB;\" x=\"-870\" y=\"1210\"><next><block type=\"v5_control_forever\" id=\"Ab6g+1,YAa[|Qy`;@Y?c\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then_else\" id=\")wKeK:1,5Y-BELIp3|,5\"><value name=\"CONDITION\"><block type=\"v5_operator_less_than\" id=\"a6ecyFb[N::::wZc,OkN\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"eEDsnB),YQAB:MZnBLIz\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_function\" id=\";ZU:[P*v7B;[Vb|b;Qh(\"><field name=\"OPERATOR\">abs</field><value name=\"NUM\"><shadow type=\"math_number\" id=\"92s.e%tD|QX4[[m}bbx}\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_velocity_of_motor\" id=\"5@=oSc1.4UGst!O(m:-y\"><field name=\"MOTOR\">FW</field><field name=\"UNITS\">rpm</field></block></value></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"9KD?|9R307aH:giV,*=3\"><field name=\"NUM\">200</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_set_fill_color\" id=\"-VLS*Qt/e?cicUK;!_2R\"><field name=\"COLOR\">red</field><next><block type=\"v5_looks_draw_rectangle\" id=\"u3oV4COON2/%T~!v:_f#\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"oifIt[^*@LEJL8*bOd)L\"><field name=\"NUM\">0</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"hm%c5`+6Qs-PHmbq#VwV\"><field name=\"NUM\">0</field></shadow></value><value name=\"WIDTH\"><shadow type=\"math_whole_number\" id=\"=8@#.@XPtbXu}zt9yg3O\"><field name=\"NUM\">480</field></shadow></value><value name=\"HEIGHT\"><shadow type=\"math_whole_number\" id=\"p`^?9yI{%8bUj@p1=|!t\"><field name=\"NUM\">272</field></shadow></value><next><block type=\"v5_control_wait\" id=\"ynqsr;%,,vCk*+$J7;o`\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"KBj9MY($[9.)aDCYz~uI\"><field name=\"NUM\">0.1</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\"=vq_9)#_N1K`UUS`hfz?\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\"A$(rwa31@zPe`pFM]_/B\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"xJbSHMj[itv2:M-6}Z1C\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"b#,/M^A+b(Q`M0P`cxEZ\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_looks_set_fill_color\" id=\"?kHwm^6p)72PA*bLKeg1\"><field name=\"COLOR\">green</field><next><block type=\"v5_looks_draw_rectangle\" id=\"MmE;EaLw3J$ZyJ#LXJka\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\":qN$%w14PRFB;Lfpvd*H\"><field name=\"NUM\">0</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"_ccf`Zb4Y((g]eGx+#Mc\"><field name=\"NUM\">0</field></shadow></value><value name=\"WIDTH\"><shadow type=\"math_whole_number\" id=\"w2XSt9(w7-q8,WW[%0|W\"><field name=\"NUM\">480</field></shadow></value><value name=\"HEIGHT\"><shadow type=\"math_whole_number\" id=\";;?P4[V}dlEJ-g#of(BB\"><field name=\"NUM\">272</field></shadow></value><next><block type=\"v5_control_wait\" id=\"[m=@-bGd;$ww=N)9=~Se\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"}igr-DYiMvkEq?+8gDHq\"><field name=\"NUM\">0.1</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\"lHp|GePu8{)~`y#,E7kk\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\"%MD0THr5sKVacfN$cMNN\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"^q6U7k$DkIbKmcZscMh@\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"GoMWYI0+Z[j6GyNe,7,;\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></statement></block></next></block><block type=\"v5_events_when_started\" id=\"xJE;RTH41idp!YcS(k?q\" disabled=\"true\" x=\"1130\" y=\"1410\"><next><block type=\"v5_other_comment\" id=\":X(ve21pkd:+2#[)i~RQ\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"UWjh[#%k-{!Y`ZvNyv,k\"><field name=\"comment\">Timer so we do not overshoot the 60 second game time</field></shadow></value><next><block type=\"v5_control_wait\" id=\"s;B[,E$0ExMv_Jv$H=xq\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"pZm(9L@(^csf:o;KHuJ!\"><field name=\"NUM\">60</field></shadow></value><next><block type=\"v5_control_stop_project\" id=\"s?NWADAmr[9p$2@$@+r[\"></block></next></block></next></block></next></block><block type=\"v5_other_comment\" id=\"E1wfWDeU#Pn?l.^~6W!;\" x=\"1190\" y=\"1790\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"z5PQs5T[$5*d6of[P/(L\"><field name=\"comment\">Why be moody when you can shake yo booty</field></shadow></value></block></xml>","rconfig":[{"port":[21],"name":"DF","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[1,2,3,4,8],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"rev","gyroType":"gps","width":"10","unit":"in","wheelbase":"10","wheelbaseUnit":"in","xOffset":"0","xOffsetUnit":"mm","yOffset":"2.5","yOffsetUnit":"in","thetaOffset":"0"},"triportSourcePort":null},{"port":[6,7],"name":"Lift","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[10],"name":"FW","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20240219.10.00.00","appVersion":"3.1.0","minVersion":"3.1.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ndistance DF = distance(PORT21);\nmotor leftMotorA = motor(PORT1, ratio18_1, true);\nmotor leftMotorB = motor(PORT2, ratio18_1, true);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT3, ratio18_1, false);\nmotor rightMotorB = motor(PORT4, ratio18_1, false);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ngps DrivetrainGPS = gps(PORT8, 0.00, 63.50, mm, 0);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainGPS, 319.19, 320, 254, mm, 1);\n\nmotor LiftMotorA = motor(PORT6, ratio36_1, false);\nmotor LiftMotorB = motor(PORT7, ratio36_1, true);\nmotor_group Lift = motor_group(LiftMotorA, LiftMotorB);\n\nmotor FW = motor(PORT10, ratio6_1, true);\n\n\nbool vexcode_initial_drivetrain_calibration_completed = false;\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"GPS\");\n  DrivetrainGPS.calibrate();\n  while (DrivetrainGPS.isCalibrating()) {\n    wait(25, msec);\n  }\n  vexcode_initial_drivetrain_calibration_completed = true;\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_Drive_till_number_inches_away_from_wall(double myblockfunction_Drive_till_number_inches_away_from_wall__number);\n// User defined function\nvoid myblockfunction_Lock_On_number_Degrees(double myblockfunction_Lock_On_number_Degrees__number);\n\nfloat myVariable, new_num, done;\n\nevent message1 = event();\nevent im_done = event();\nevent wait_GPS = event();\n\n// User defined function\nvoid myblockfunction_Drive_till_number_inches_away_from_wall(double myblockfunction_Drive_till_number_inches_away_from_wall__number) {\n  // This function was written in preperation of a possible nationals appearance. We plan to keep this code for possible future competitions or expansion of our robot\n  // sets the offset of the distance sensor based off its placement\n  new_num = myblockfunction_Drive_till_number_inches_away_from_wall__number + 6.0;\n  while (true) {\n    // This chain of if statements checks to see the distance of the robot from the wall and has the robot drive forward or backwards\n    // based off how far or close the robot is to the wall or object it is in front of. It is givent about a 2 inch area of give so that the robot isnt constantly adjusting\n    if (DF.objectDistance(inches) > new_num + 2.0) {\n      // If distance is more than the specified distance it drives forward\n      Drivetrain.drive(forward);\n    } else if (DF.objectDistance(inches) < new_num) {\n      // If the distance is less than the provided distance, then it drives backwards\n      Drivetrain.drive(reverse);\n    } else if (DF.objectDistance(inches) > new_num && DF.objectDistance(inches) < new_num + 2.0) {\n      // When driving is done, set the stop variable to 1, showing it is done and breakign the forever loop\n      Drivetrain.stop();\n      done = 1.0;\n      break;\n    } else {\n      // If no object is detected, then it drives forward until the robot detects an object and follows the above if statements\n      Drivetrain.drive(forward);\n    }\n  wait(5, msec);\n  }\n}\n\n// User defined function\nvoid myblockfunction_Lock_On_number_Degrees(double myblockfunction_Lock_On_number_Degrees__number) {\n  // Function that we use to have the robot lock on to a certain degree\n  DrivetrainGPS.calibrate();\n  while (DrivetrainGPS.isCalibrating()) { task::sleep(50); }\n  Drivetrain.setTurnVelocity(100.0, percent);\n  while (true) {\n    // Sets heading forever\n    Drivetrain.turnToHeading(myblockfunction_Lock_On_number_Degrees__number, degrees, false);\n    // This If Statement is a checking system to break the forever loop if the timer is done\n    if (done == 1.0) {\n      done = 0.0;\n      break;\n    }\n  wait(5, msec);\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Setting a drive timeout in case robot drives into a wall so the program doesnt brick\n  Drivetrain.setTimeout(3.0, sec);\n  // the next code sets all of the required stopping velocity, and torque values to be used throughout the program\n  Lift.setStopping(hold);\n  FW.setStopping(coast);\n  FW.setVelocity(45.0, percent);\n  FW.setMaxTorque(100.0, percent);\n  Drivetrain.setDriveVelocity(70.0, percent);\n  // These two drives have our robot move forward, then backwards to push in the red preloaded tri ball\n  Drivetrain.driveFor(forward, 7.0, inches, true);\n  Drivetrain.driveFor(reverse, 10.0, inches, true);\n  // This spins the flywheel so that it has enough speed for when we are ready to start loading on the triballs\n  FW.spin(forward);\n  // The next two sets the wait timer and has the robot lock onto 30 degrees, lining up with the loading zone\n  wait_GPS.broadcast();\n  myblockfunction_Lock_On_number_Degrees(120.0);\n  // The next three have the robot drive backwards and and the same time, rotate the lift arms so our robot breaks the loading plane\n  Drivetrain.driveFor(reverse, 4.0, inches, false);\n  Lift.spinFor(forward, 1.5, turns, false);\n  Drivetrain.setTimeout(100.0, sec);\n  // This timer is set to give us 37 seconds of shooting over the tri balls\n  wait(37.0, seconds);\n  // the next two stop the flywheel after the 37 seconds and puts the lift arms at almost 90 degrees to prepare for hanging\n  FW.stop();\n  Lift.spinFor(reverse, 0.5, turns, true);\n  // The next two has the robot lock onto -30 degrees\n  wait_GPS.broadcast();\n  myblockfunction_Lock_On_number_Degrees(60.0);\n  // The next one drives the robot to align with the hang bars\n  Drivetrain.driveFor(forward, 36.0, inches, true);\n  // The next two aligns the robot to 0 degrees, facing the hang bar\n  wait_GPS.broadcast();\n  myblockfunction_Lock_On_number_Degrees(90.0);\n  // The final two have the robot drive forward and move the lift arms to the point where the robot is hanging\n  Drivetrain.driveFor(forward, 32.0, inches, true);\n  Lift.spinFor(forward, -1.0, turns, true);\n  return 0;\n}\n\n// \"when I receive wait_GPS\" hat block\nvoid onevent_wait_GPS_0() {\n  // Gives a buffer for the gps sensor to correctly turn to the heading we want it to\n  wait(5.0, seconds);\n  done = 1.0;\n}\n\n// \"when started\" hat block\nint whenStarted2() {\n  while (true) {\n    if (fabs(static_cast<float>(FW.velocity(rpm))) < 200.0) {\n      Brain.Screen.setFillColor(red);\n      Brain.Screen.drawRectangle(0, 0, 480, 272);\n      wait(0.1, seconds);\n      Brain.Screen.clearScreen();\n      Brain.Screen.setCursor(1, 1);\n    }\n    else {\n      Brain.Screen.setFillColor(green);\n      Brain.Screen.drawRectangle(0, 0, 480, 272);\n      wait(0.1, seconds);\n      Brain.Screen.clearScreen();\n      Brain.Screen.setCursor(1, 1);\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // register event handlers\n  wait_GPS(onevent_wait_GPS_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  vex::task ws1(whenStarted2);\n  whenStarted1();\n}","target":"Physical"}