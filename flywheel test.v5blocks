{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_motion_set_motor_velocity\" id=\"$c3et+Us4%sktI-Gn;Wv\"><field name=\"MOTOR\">Motor10</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"6aWE9l^gU8zY$bj?MI/9\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"v5_control_forever\" id=\"jU,xHx?=Q7pDPI0w;6$(\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\"efBHLqS0TK%!4j|n+w=~\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"{4x[mJWwVeJ],[VR3|X!\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"(G}`^pNGKpfB=HvtItSt\"><field name=\"MOTOR\">Motor10</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_control_if_then\" id=\"CwQ3#@C8N|vQiKTJ%F55\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\";jj/dUpk#eoN_RDaj?=O\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonLeft</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"1V2Z#zs^)rqNSy0nrmSk\"><field name=\"MOTOR\">Motor10</field></block></statement></block></next></block></statement></block></next></block></next></block></xml>","rconfig":[{"port":[10],"name":"Motor10","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor Motor10 = motor(PORT10, ratio6_1, true);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Motor10.setVelocity(80.0, percent);\n  while (true) {\n    if (Controller1.ButtonDown.pressing()) {\n      Motor10.spin(forward);\n    }\n    if (Controller1.ButtonLeft.pressing()) {\n      Motor10.stop();\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}