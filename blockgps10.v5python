{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nleft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nright_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain_gps = Gps(Ports.PORT21, 0.00, 63.50, MM, 0)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_gps, 319.19, 320, 254, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain GPS\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"GPS\")\n    drivetrain_gps.calibrate()\n    while drivetrain_gps.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\nmyVariable = 0\n\ndef goto(xcord, ycord):\n    b = xcord - drivetrain_gps.x_position(MM)\n    c = ycord - drivetrain_gps.y_position(MM)\n    if b == 0 and c == 0:\n        pass\n    else:\n        a = math.sqrt(b**2 + c**2)\n        angle = math.asin((math.sin(90 / 180.0 * math.pi) * b) / a) / math.pi * 180\n        if c < 0:\n            angle = 180 - angle\n\n        drivetrain.turn_to_heading(angle, DEGREES)\n        drivetrain.drive_for(FORWARD, a ,MM)\n\n\ndef when_started1():\n    global myVariable\n    \n    while 1 > 0:\n        drivetrain.turn_to_heading(0, DEGREES)\n        drivetrain.drive_for(FORWARD, 5, TURNS, wait=False)\n\n    \n    pass\n\n# Calibrate the Drivetrain\ncalibrate_drivetrain()\n\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[1,2,3,4,21],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"rev","gyroType":"gps","width":"10","unit":"in","wheelbase":"10","wheelbaseUnit":"in","xOffset":"0","xOffsetUnit":"mm","yOffset":"2.5","yOffsetUnit":"in","thetaOffset":"0"},"triportSourcePort":null}],"slot":5,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}