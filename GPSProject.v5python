{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\ndrivetrain_gps = Gps(Ports.PORT8, 0.00, 63.50, MM, 0)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_gps, 319.19, 320, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain GPS\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"GPS\")\n    drivetrain_gps.calibrate()\n    while drivetrain_gps.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ---------------------------------------------------------------------------------\n#                                                                            \n# \tProject:            Drivetrain with GPS\n#\tDescription:        This example program demonstrates how to configure and use a\n#                       GPS with a Drivetrain to move a Clawbot to the center of a field\n#   Starting Position:  Bottom Right Corner - Facing West\n#   Configuration:      V5 Clawbot (Drivetrain 2-motor, GPS) \n#                       Motor Group on Port 2 and 9\n#                       ClawMotor on Port 3\n#                       ArmMotor on Port 8\n#              \n# ---------------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\ndef printPosition():\n    # Print GPS positions to the V5 Brain\n    brain.screen.print(\"X: \", drivetrain_gps.x_position(MM))\n    brain.screen.print(\"  Y: \", drivetrain_gps.y_position(MM))\n    brain.screen.next_row()\n    \n# Calibrate the Drivetrain GPS\ndrivetrain_gps.calibrate()\nbrain.screen.print(\"Calibrating GPS for Drivetrain\")\nwhile drivetrain_gps.is_calibrating():\n    sleep(25, MSEC)\nbrain.screen.clear_screen()\nbrain.screen.set_cursor(1, 1)\n\n# Set the approximate starting position of the robot\n# This helps the GPS sensor know its starting position\n# if it is too close to the field walls to get an accurate initial reading\ndrivetrain_gps.set_location(1380, 1010, MM, -90, DEGREES)\n# Print the starting position of the V5 robot\nprintPosition()\ndrivetrain.drive(REVERSE)\n\n# Keep driving until the GPS's x_position passes 0 (horizontal center)\nwhile not drivetrain_gps.x_position(MM) < 0:\n    wait(5, MSEC)\ndrivetrain.stop()\n\ndrivetrain.set_heading(drivetrain_gps.heading())\ndrivetrain.turn_for(LEFT, 90, DEGREES, wait=True)\ndrivetrain.drive(REVERSE)\n\n# Keep driving until the GPS's y_position passes 0 (vertical center)\nwhile not drivetrain_gps.y_position(MM) > 0:\n    wait(5, MSEC)\ndrivetrain.stop()\n\n# Print the ending position of the V5 robot\nprintPosition()\n","textLanguage":"python","rconfig":[{"port":[1,3,8],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"gps","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"2.5","yOffsetUnit":"in","thetaOffset":"0"},"triportSourcePort":null}],"slot":7,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}