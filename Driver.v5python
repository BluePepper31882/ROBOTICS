{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nLM_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nLM_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nLM = MotorGroup(LM_motor_a, LM_motor_b)\nRM_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nRM_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\nRM = MotorGroup(RM_motor_a, RM_motor_b)\nsidemotor = Motor(Ports.PORT5, GearSetting.RATIO_18_1, False)\nLift = Motor(Ports.PORT6, GearSetting.RATIO_36_1, False)\nlift2 = Motor(Ports.PORT7, GearSetting.RATIO_36_1, True)\nWL = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nWR = Motor(Ports.PORT16, GearSetting.RATIO_18_1, False)\nflywheel = Motor(Ports.PORT10, GearSetting.RATIO_6_1, True)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nmyVariable = 0\n\ndef when_started1():\n    global myVariable\n    sidemotor.set_velocity(85, PERCENT)\n    Lift.set_stopping(HOLD)\n    lift2.set_stopping(HOLD)\n    Lift.set_max_torque(300, PERCENT)\n    lift2.set_max_torque(300, PERCENT)\n    WL.set_position(0, DEGREES)\n    WL.set_stopping(HOLD)\n    WL.set_max_torque(100, PERCENT)\n    flywheel.set_velocity(100, PERCENT)\n    flywheel.set_stopping(COAST)\n\n    while True:\n        x = LM.position()\n        y = RM.position()\n\n        a = x - LM.position()\n        b = y - RM.position()\n        \n\n        if LM.is_spinning() == False:\n            if LM.position() != 0:\n                print((a / 360))\n            LM.position() == 0\n\n        if RM.is_spinning() == False:\n            if RM.position() != 0:\n                print((b / 360))\n            RM.position() == 0\n\n        LM.set_velocity((controller_1.axis3.position() + controller_1.axis1.position()), PERCENT)\n        RM.set_velocity((controller_1.axis3.position() - controller_1.axis1.position()), PERCENT)\n        sidemotor.set_stopping(BRAKE)\n        LM.spin(FORWARD)\n        RM.spin(FORWARD)\n        if controller_1.buttonR2.pressing():\n            sidemotor.spin(REVERSE)\n        elif controller_1.buttonL2.pressing():\n            sidemotor.spin(FORWARD)\n        else:\n            sidemotor.stop()\n        if controller_1.buttonR1.pressing():\n            Lift.spin(REVERSE)\n            lift2.spin(REVERSE)\n        elif controller_1.buttonL1.pressing():\n            Lift.spin(FORWARD)\n            lift2.spin(FORWARD)\n        else:\n            Lift.stop()\n            lift2.stop()\n        wait(5, MSEC)\n\ndef when_started2():\n    global myVariable\n    while True:\n        if controller_1.buttonRight.pressing():\n            WL.spin_to_position(90, DEGREES, wait=False)\n            WR.spin_to_position(90, DEGREES)\n        elif controller_1.buttonDown.pressing():\n            WL.spin_to_position(0, DEGREES, wait=False)\n            WR.spin_to_position(0, DEGREES)\n        else:\n            WL.stop()\n            WR.stop()\n        wait(5, MSEC)\n\ndef when_started3():\n    global myVariable\n    while True:\n        if controller_1.buttonY.pressing():\n            flywheel.spin(FORWARD)\n        if controller_1.buttonB.pressing():\n            flywheel.stop()\n        wait(5, MSEC)\n\nws2 = Thread( when_started2 )\nws3 = Thread( when_started3 )\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1,2],"name":"LM","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[3,4],"name":"RM","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false","id":"partner"},"triportSourcePort":22},{"port":[5],"name":"sidemotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[6],"name":"Lift","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[7],"name":"lift2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[9],"name":"WL","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[16],"name":"WR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[10],"name":"flywheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}